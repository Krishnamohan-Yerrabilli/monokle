name: monokle-build-windows

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9].[0-9]+.[0-9]+' # Should only grab tags without /
  release:
    types:
      - prereleased

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # Make sure build is clean and no files from a previous run are re-used.
      - name: Cleanup files before run
        run: |
          cmd /r dir
        if: ${{ always() }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Get Node Version
        run: |
          Set-PSDebug -Trace 1
          $filePath = "D:\a\monokle\monokle\.nvmrc"
          Get-Content $filePath -Raw
          $content = Get-Content $filePath -Raw
          echo "::set-output name=nodeversion::$content"
        id: get-node-version

      - name: Use Node.js ${{ steps.get-node-version.outputs.nodeversion }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.nodeversion }}
          cache: 'npm'

      # Install Dependencies
      - name: Install Dependencies
        run: |
          Set-PSDebug -Trace 1
          node --version
          npm --version
          npm install --force

      - name: Verify Dependencies
        run: |
          cmd /r dir
          cmd /r dir .\node_modules

      - name: Build
        run: |
          npm run electron:build:ci
        env:
          # Set CI flag to false, or the build fails on all warnings, not just errors as locally.
          CI: false

      - name: Package and Publish
        run: |
          EP_DRAFT=true EP_PRE_RELEASE=true npm exec -c 'electron-builder --publish "always"'
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

      # Check Binary Size
      - name: Build Succeeded
        run: |
          cmd /r dir .\dist
        if: ${{ success() }}
